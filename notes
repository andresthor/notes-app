#!/bin/bash

# Get the directory of the current script
SCRIPT_DIR="$(dirname "$(realpath "$0")")"

# Define the path to the configuration file
CONFIG_FILE="$SCRIPT_DIR/.config"

if [[ -f $CONFIG_FILE ]]; then
  source $CONFIG_FILE
else
  echo "Configuration file for notes was not found: $CONFIG_FILE"
  exit 1
fi

if [[ ! -f $NOTES_DAILY_TEMPLATE ]]; then
  echo "Couldn't find daily notes template at: $NOTES_DAILY_TEMPLATE"
  exit 1
fi

function notes() {
  if [[ $1 = $NOTES_CMD_NEW ]]; then
    new_note $2
  elif [[ $1 = $NOTES_CMD_SEARCH ]]; then
    search_notes_with_fzf
  elif [[ $1 = $NOTES_CMD_FIND ]]; then
    find_notes_with_fzf
  elif [[ $1 = $NOTES_CMD_DAILY ]]; then
    daily_note
  elif [[ $1 = $NOTES_CMD_BUCKET ]]; then
    bucket_note "${@:2}"
  fi
}

function new_note() {
  if [[ -z $1 ]]; then
    echo "Missing note title"
    return
  fi

  local note_title=$1
  local note_path=$NOTES_MISC_DIR/${note_title}.md

  if [[ -f $note_path ]]; then
    echo "Note already exists"
    return
  fi

  touch $note_path
  vim $note_path
}

date_with_suffix() {
  day=$(date +"%-d")
  case $day in
  1 | 21 | 31) suffix="st" ;;
  2 | 22) suffix="nd" ;;
  3 | 23) suffix="rd" ;;
  *) suffix="th" ;;
  esac
  echo "$(date +"%A %B $day")${suffix} $(date +"%Y")"
}

function daily_note() {
  local note_path=$NOTES_DAILY_DIR/$(date +"%Y-%m-%d-%A").md
  if [[ -f $note_path ]]; then
    vim $note_path
  else
    last_daily=$(ls -t $NOTES_DAILY_DIR/ | grep -v "template" | head -n 1)
    cp -f $NOTES_DAILY_TEMPLATE $note_path
    sed -i '' "s/TEMPLATE_DATE/$(date_with_suffix)/" $note_path

    sed -n '/^### Carry-over$/,/^## Log$/p' "$NOTES_DAILY_DIR/$last_daily" | sed '1d;$d;/^$/d' >$CARRY_OVER_TMP_FILE
    sed -i '' "/TEMPLATE_CARRY_OVER/{
    r $CARRY_OVER_TMP_FILE
    d
    }" $note_path
    rm $CARRY_OVER_TMP_FILE

    vim $note_path
  fi
}

function bucket_note() {
  local note_path=$NOTES_BUCKET_DIR/$(date +"%Y/%m").md

  if [[ ! -f $note_path ]]; then
    mkdir -p $(dirname $note_path)
    echo "# Bucket notes $(date +"%Y-%m")\n" >$note_path
  fi

  if [[ $1 != $NOTES_BUCKET_CMD_READ ]]; then
    echo -n "- [ $(date +"%Y-%m-%d %H:%M") ] " >>$note_path
    echo "$@" >>$note_path
  fi

  if [[ -z $1 || $1 == $NOTES_BUCKET_CMD_READ ]]; then
    vim "+ normal GA" $note_path
  fi
}
